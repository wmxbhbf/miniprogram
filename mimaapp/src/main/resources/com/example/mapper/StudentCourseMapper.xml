<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.StudentCourseMapper">
  <resultMap id="BaseResultMap" type="com.example.domain.StudentCourse">
    <!--@mbg.generated-->
    <!--@Table `student_course`-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    `id`, `student_id`, `course_id`, `teacher_id`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from `student_course`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from `student_course`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.domain.StudentCourse" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `student_course` (`student_id`, `course_id`, `teacher_id`
      )
    values (#{studentId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.domain.StudentCourse" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `student_course`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        `student_id`,
      </if>
      <if test="courseId != null">
        `course_id`,
      </if>
      <if test="teacherId != null">
        `teacher_id`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.domain.StudentCourse">
    <!--@mbg.generated-->
    update `student_course`
    <set>
      <if test="studentId != null">
        `student_id` = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        `course_id` = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        `teacher_id` = #{teacherId,jdbcType=INTEGER},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.domain.StudentCourse">
    <!--@mbg.generated-->
    update `student_course`
    set `student_id` = #{studentId,jdbcType=INTEGER},
      `course_id` = #{courseId,jdbcType=INTEGER},
      `teacher_id` = #{teacherId,jdbcType=INTEGER}
    where `id` = #{id,jdbcType=INTEGER}
  </update>

  <select id="listAllByStudentId"  resultType="com.example.domain.StudentAndCourse">
    select * from `student_course` a left join `course` c on c.`id` = a.`course_id`
    where a.`student_id` = #{studentId,jdbcType=INTEGER}
  </select>

  <select id="listAllByTeacherId" resultType="com.example.domain.TeacherAndStudent">
    select * from `student_course` a left join student s on s.`id` = a.`student_id`
    where a.`teacher_id` = #{teacherId,jdbcType=INTEGER}
  </select>
</mapper>